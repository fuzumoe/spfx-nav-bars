{"version":3,"sources":["extensions/navBar/NavBarApplicationCustomizer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,oDAAiD;AACjD,8DAAiD;AACjD,sEAIwC;AAExC,4DAA8D;AAE9D,6CAA0C;AAE1C,IAAM,UAAU,GAAW,6BAA6B,CAAC;AAYzD,qFAAqF;AACrF;IACU,+CAAiE;IAD3E;QAAA,qEAmFC;QAnEC,mBAAmB;QACX,aAAO,GAAuB,IAAI,CAAC;QACnC,aAAO,GAAuB,IAAI,CAAC;;IAiE7C,CAAC;IA/EQ,4CAAM,GAAb;QACE,qBAAG,CAAC,IAAI,CAAC,UAAU,EAAE,iBAAe,OAAO,CAAC,KAAO,CAAC,CAAC;QAErD,2DAA2D;QAC3D,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAE5E,qBAAqB;QACrB,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAMD,gCAAgC;IACxB,mDAAa,GAArB;QACE,kCAAkC;QAClC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAClB,oBAAoB;YACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,qCAAe,CAAC,GAAG,CAAC,CAAC;YAEtF,wBAAwB;YACxB,yBAAU,CAAC,MAAM,CAAC;gBAChB,KAAK,EAAE,gBAAgB;gBACvB,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU;gBAC3B,IAAI,EAAG,CAAC;gBACR,SAAS,EAAC,YAAY;gBACtB,SAAS,EAAE;oBACT,QAAQ,EAAE,UAAS,KAAK;wBACpB,gBAAgB;wBAChB,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,KAAK,CAAC,CAAC;oBACjD,CAAC;oBACD,QAAQ,EAAE,UAAS,KAAK;wBACpB,gBAAgB;wBAChB,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,KAAK,CAAC,CAAC;oBACjD,CAAC;iBACJ;gBACD,KAAK,EAAE;oBACH;wBACI,IAAI,EAAE,MAAM;qBAEf;oBACD;wBACI,IAAI,EAAE,YAAY;wBAClB,QAAQ,EAAE,IAAI;qBAEjB;oBACD;wBACI,IAAI,EAAE,eAAe;wBACrB,UAAU,EAAE,IAAI;qBACnB;oBACD;wBACI,IAAI,EAAE,eAAe;wBACrB,KAAK,EAAE;4BACH,EAAE,IAAI,EAAE,QAAQ,EAAG,UAAU,EAAC,IAAI,EAAC;4BACnC,EAAE,IAAI,EAAE,QAAQ,EAAE;4BAClB,EAAE,IAAI,EAAE,QAAQ,EAAE;4BAClB,EAAE,IAAI,EAAE,QAAQ,EAAE;4BAClB,EAAE,IAAI,EAAE,QAAQ,EAAE;yBACrB;qBACJ;iBACJ;aACA,CAAC,CAAC;QACL,CAAC;QAED,kCAAkC;QAClC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAClB,oBAAoB;YACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,qCAAe,CAAC,MAAM,CAAC,CAAC;YAEzF,2BAA2B;YAC3B,yBAAU,CAAC,MAAM,CAAC;gBAChB,KAAK,EAAE,gBAAgB;gBACvB,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU;aAC5B,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IA9ED;QADC,qBAAQ;6DAWR;IAqEH,kCAAC;CAnFD,AAmFC,CAlFS,+CAAyB,GAkFlC;kBAnFoB,2BAA2B","file":"extensions/navBar/NavBarApplicationCustomizer.js","sourcesContent":["import { override } from '@microsoft/decorators';\nimport { Log } from '@microsoft/sp-core-library';\nimport {\n  BaseApplicationCustomizer,\n  PlaceholderContent,\n  PlaceholderName\n} from '@microsoft/sp-application-base';\n\nimport * as strings from 'NavBarApplicationCustomizerStrings';\n\nimport { Components } from \"gd-sprest-bs\";\n\nconst LOG_SOURCE: string = 'NavBarApplicationCustomizer';\n\n/**\n * If your command set uses the ClientSideComponentProperties JSON input,\n * it will be deserialized into the BaseExtension.properties object.\n * You can define an interface to describe it.\n */\nexport interface INavBarApplicationCustomizerProperties {\n  // This is an example; replace with your own property\n  testMessage: string;\n}\n\n/** A Custom Action which can be run during execution of a Client Side Application */\nexport default class NavBarApplicationCustomizer\n  extends BaseApplicationCustomizer<INavBarApplicationCustomizerProperties> {\n\n  @override\n  public onInit(): Promise<void> {\n    Log.info(LOG_SOURCE, `Initialized ${strings.Title}`);\n\n    // Handle possible changes on the existence of placeholders\n    this.context.placeholderProvider.changedEvent.add(this, this.renderNavbars);\n\n    // Render the navbars\n    this.renderNavbars();\n\n    return Promise.resolve();\n  }\n\n  // Global Variables\n  private _footer: PlaceholderContent = null;\n  private _header: PlaceholderContent = null;\n\n  // Method to render the nav bars\n  private renderNavbars() {\n    // See if the header doesn't exist\n    if (!this._header) {\n      // Create the header\n      this._header = this.context.placeholderProvider.tryCreateContent(PlaceholderName.Top);\n\n      // Render the top navbar\n      Components.Navbar({\n        brand: \"Impactory Test\",\n        el: this._header.domElement,\n        type:  1,\n        className:'activeOnes',\n        searchBox: {\n          onChange: function(value) {\n              // Log the value\n              console.log(\"The search value is: \" + value);\n          },\n          onSearch: function(value) {\n              // Log the value\n              console.log(\"The search value is: \" + value);\n          }\n      },\n      items: [\n          {\n              text: \"Home\"\n\n          },\n          {\n              text: \"Active One\",\n              isActive: true,\n\n          },\n          {\n              text: \"Disabled Link\",\n              isDisabled: true\n          },\n          {\n              text: \"Dropdown Link\",\n              items: [\n                  { text: \"Link 1\"  ,isSelected:true},\n                  { text: \"Link 2\" },\n                  { text: \"Link 3\" },\n                  { text: \"Link 4\" },\n                  { text: \"Link 5\" }\n              ]\n          }\n      ]\n      });\n    }\n\n    // See if the footer doesn't exist\n    if (!this._footer) {\n      // Create the footer\n      this._footer = this.context.placeholderProvider.tryCreateContent(PlaceholderName.Bottom);\n\n      // Render the bottom navbar\n      Components.Navbar({\n        brand: \"Impactory Test\",\n        el: this._footer.domElement\n      });\n    }\n  }\n}\n"],"sourceRoot":"../../../src"}